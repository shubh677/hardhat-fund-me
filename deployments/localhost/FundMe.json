{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x34d724c4d0d3193f29da4246811a788a15844615d2ffcf0eee24fd275f17fb49",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1066324",
    "logsBloom": "0x
    "blockHash": "0x461f2af408077239048a1881ee433e4f6d8f3a47c108c10ad26b8781a974843c",
    "transactionHash": "0x34d724c4d0d3193f29da4246811a788a15844615d2ffcf0eee24fd275f17fb49",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1066324",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "de465365cd661d75852467efe570d2fe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed=AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner{\\n\\n        address[] memory funders = s_funders;\\n\\n        for(uint256 funderIndex=0;funderIndex<funders.length;funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder]=0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool success,) = i_owner.call{value:address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n\\n}\\n\\n\\n\\n\",\"keccak256\":\"0xfc298930cab4bba259944a7525fcd47cff44bf634c54879883e1c58b78215407\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        // Rinkeby ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x81ac72730de4f57661da9fefbb4e63a37b1c3b75edb95fde5f2b8b1f98a00576\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012ec380380620012ec833981810160405281019062000037919062000129565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b611181806200016b6000396000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ab9565b6102ea565b6040516100cc9190610aff565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610598565b6040516101019190610aff565b60405180910390f35b34801561011657600080fd5b5061011f6105a5565b60405161012c9190610b29565b60405180910390f35b34801561014157600080fd5b5061014a6105cf565b6040516101579190610ba3565b60405180910390f35b6101686101b1565b005b6101726105f8565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bea565b61088b565b6040516101a89190610b29565b60405180910390f35b6802b5e3af16b18800006101ee60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d390919063ffffffff16565b101561022f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022690610c74565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027e9190610cc3565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600280549050811015610466576000600282815481106103e0576103df610d19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045e90610d48565b9150506103bd565b50600067ffffffffffffffff81111561048257610481610d91565b5b6040519080825280602002602001820160405280156104b05781602001602082028036833780820191505090505b50600290805190602001906104c69291906109af565b506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161050f90610df1565b60006040518083038185875af1925050503d806000811461054c576040519150601f19603f3d011682016040523d82523d6000602084013e610551565b606091505b5050905080610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610e52565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600280548060200260200160405190810160405280929190818152602001828054801561070357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b9575b5050505050905060005b815181101561078e57600082828151811061072b5761072a610d19565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078690610d48565b91505061070d565b50600067ffffffffffffffff8111156107aa576107a9610d91565b5b6040519080825280602002602001820160405280156107d85781602001602082028036833780820191505090505b50600290805190602001906107ee9291906109af565b506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161083790610df1565b60006040518083038185875af1925050503d8060008114610874576040519150601f19603f3d011682016040523d82523d6000602084013e610879565b606091505b505090508061088757600080fd5b5050565b6000600282815481106108a1576108a0610d19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108df8361090f565b90506000670de0b6b3a764000085836108f89190610e72565b6109029190610efb565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095857600080fd5b505afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190610fb9565b5050509150506402540be400816109a79190611034565b915050919050565b828054828255906000526020600020908101928215610a28579160200282015b82811115610a275782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109cf565b5b509050610a359190610a39565b5090565b5b80821115610a52576000816000905550600101610a3a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8682610a5b565b9050919050565b610a9681610a7b565b8114610aa157600080fd5b50565b600081359050610ab381610a8d565b92915050565b600060208284031215610acf57610ace610a56565b5b6000610add84828501610aa4565b91505092915050565b6000819050919050565b610af981610ae6565b82525050565b6000602082019050610b146000830184610af0565b92915050565b610b2381610a7b565b82525050565b6000602082019050610b3e6000830184610b1a565b92915050565b6000819050919050565b6000610b69610b64610b5f84610a5b565b610b44565b610a5b565b9050919050565b6000610b7b82610b4e565b9050919050565b6000610b8d82610b70565b9050919050565b610b9d81610b82565b82525050565b6000602082019050610bb86000830184610b94565b92915050565b610bc781610ae6565b8114610bd257600080fd5b50565b600081359050610be481610bbe565b92915050565b600060208284031215610c0057610bff610a56565b5b6000610c0e84828501610bd5565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c5e601b83610c17565b9150610c6982610c28565b602082019050919050565b60006020820190508181036000830152610c8d81610c51565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cce82610ae6565b9150610cd983610ae6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0e57610d0d610c94565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5382610ae6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8657610d85610c94565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ddb600083610dc0565b9150610de682610dcb565b600082019050919050565b6000610dfc82610dce565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e3c600b83610c17565b9150610e4782610e06565b602082019050919050565b60006020820190508181036000830152610e6b81610e2f565b9050919050565b6000610e7d82610ae6565b9150610e8883610ae6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec157610ec0610c94565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0682610ae6565b9150610f1183610ae6565b925082610f2157610f20610ecc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4b81610f2c565b8114610f5657600080fd5b50565b600081519050610f6881610f42565b92915050565b6000819050919050565b610f8181610f6e565b8114610f8c57600080fd5b50565b600081519050610f9e81610f78565b92915050565b600081519050610fb381610bbe565b92915050565b600080600080600060a08688031215610fd557610fd4610a56565b5b6000610fe388828901610f59565b9550506020610ff488828901610f8f565b945050604061100588828901610fa4565b935050606061101688828901610fa4565b925050608061102788828901610f59565b9150509295509295909350565b600061103f82610f6e565b915061104a83610f6e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561108957611088610c94565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110c6576110c5610c94565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110357611102610c94565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111405761113f610c94565b5b82820290509291505056fea264697066735822122035318e2cb4d06e8683cb59c16dd8c902d888b4667beed706650a3915c8e0e7bc64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ab9565b6102ea565b6040516100cc9190610aff565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610598565b6040516101019190610aff565b60405180910390f35b34801561011657600080fd5b5061011f6105a5565b60405161012c9190610b29565b60405180910390f35b34801561014157600080fd5b5061014a6105cf565b6040516101579190610ba3565b60405180910390f35b6101686101b1565b005b6101726105f8565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bea565b61088b565b6040516101a89190610b29565b60405180910390f35b6802b5e3af16b18800006101ee60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d390919063ffffffff16565b101561022f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022690610c74565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027e9190610cc3565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600280549050811015610466576000600282815481106103e0576103df610d19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045e90610d48565b9150506103bd565b50600067ffffffffffffffff81111561048257610481610d91565b5b6040519080825280602002602001820160405280156104b05781602001602082028036833780820191505090505b50600290805190602001906104c69291906109af565b506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161050f90610df1565b60006040518083038185875af1925050503d806000811461054c576040519150601f19603f3d011682016040523d82523d6000602084013e610551565b606091505b5050905080610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610e52565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600280548060200260200160405190810160405280929190818152602001828054801561070357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b9575b5050505050905060005b815181101561078e57600082828151811061072b5761072a610d19565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078690610d48565b91505061070d565b50600067ffffffffffffffff8111156107aa576107a9610d91565b5b6040519080825280602002602001820160405280156107d85781602001602082028036833780820191505090505b50600290805190602001906107ee9291906109af565b506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161083790610df1565b60006040518083038185875af1925050503d8060008114610874576040519150601f19603f3d011682016040523d82523d6000602084013e610879565b606091505b505090508061088757600080fd5b5050565b6000600282815481106108a1576108a0610d19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108df8361090f565b90506000670de0b6b3a764000085836108f89190610e72565b6109029190610efb565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095857600080fd5b505afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190610fb9565b5050509150506402540be400816109a79190611034565b915050919050565b828054828255906000526020600020908101928215610a28579160200282015b82811115610a275782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109cf565b5b509050610a359190610a39565b5090565b5b80821115610a52576000816000905550600101610a3a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8682610a5b565b9050919050565b610a9681610a7b565b8114610aa157600080fd5b50565b600081359050610ab381610a8d565b92915050565b600060208284031215610acf57610ace610a56565b5b6000610add84828501610aa4565b91505092915050565b6000819050919050565b610af981610ae6565b82525050565b6000602082019050610b146000830184610af0565b92915050565b610b2381610a7b565b82525050565b6000602082019050610b3e6000830184610b1a565b92915050565b6000819050919050565b6000610b69610b64610b5f84610a5b565b610b44565b610a5b565b9050919050565b6000610b7b82610b4e565b9050919050565b6000610b8d82610b70565b9050919050565b610b9d81610b82565b82525050565b6000602082019050610bb86000830184610b94565b92915050565b610bc781610ae6565b8114610bd257600080fd5b50565b600081359050610be481610bbe565b92915050565b600060208284031215610c0057610bff610a56565b5b6000610c0e84828501610bd5565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c5e601b83610c17565b9150610c6982610c28565b602082019050919050565b60006020820190508181036000830152610c8d81610c51565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cce82610ae6565b9150610cd983610ae6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0e57610d0d610c94565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5382610ae6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8657610d85610c94565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ddb600083610dc0565b9150610de682610dcb565b600082019050919050565b6000610dfc82610dce565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e3c600b83610c17565b9150610e4782610e06565b602082019050919050565b60006020820190508181036000830152610e6b81610e2f565b9050919050565b6000610e7d82610ae6565b9150610e8883610ae6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec157610ec0610c94565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0682610ae6565b9150610f1183610ae6565b925082610f2157610f20610ecc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4b81610f2c565b8114610f5657600080fd5b50565b600081519050610f6881610f42565b92915050565b6000819050919050565b610f8181610f6e565b8114610f8c57600080fd5b50565b600081519050610f9e81610f78565b92915050565b600081519050610fb381610bbe565b92915050565b600080600080600060a08688031215610fd557610fd4610a56565b5b6000610fe388828901610f59565b9550506020610ff488828901610f8f565b945050604061100588828901610fa4565b935050606061101688828901610fa4565b925050608061102788828901610f59565b9150509295509295909350565b600061103f82610f6e565b915061104a83610f6e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561108957611088610c94565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110c6576110c5610c94565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110357611102610c94565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111405761113f610c94565b5b82820290509291505056fea264697066735822122035318e2cb4d06e8683cb59c16dd8c902d888b4667beed706650a3915c8e0e7bc64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}